# mihomo 配置 引用配置件——————————————————————0420备份件
# 日期：2025-03-30 19:55:16
# 配置作者：https://t.me/iKeLee
# 适用版本：所有使用 mihomo 核心的程序
port: 7890
socks-port: 7891
mixed-port: 7892
redir-port: 7893
tproxy-port: 7894

unified-delay: true
geodata-mode: false
geodata-loader: standard
geo-auto-update: true
geo-update-interval: 24
tcp-concurrent: true
find-process-mode: strict
global-client-fingerprint: chrome

allow-lan: true
mode: rule
log-level: info
ipv6: true
udp: true

external-controller: 0.0.0.0:9090
# external-ui: ui
# external-ui-url: 'https://github.com/MetaCubeX/metacubexd/archive/refs/heads/gh-pages.zip'

geox-url:
  geoip: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geoip.dat'
  # geosite: 'https://raw.githubusercontent.com/Loyalsoldier/v2ray-rules-dat/release/geosite.dat'
  mmdb: 'https://geodata.kelee.one/Country-Masaiki.mmdb'
  asn: 'https://geodata.kelee.one/GeoLite2-ASN-P3TERX.mmdb'

profile:
  store-selected: true
  store-fake-ip: false

sniffer:
  enable: true
  force-dns-mapping: true
  parse-pure-ip: true
  override-destination: true
  sniff:
    HTTP:
      ports: [80, 8080-8880]
      override-destination: true
    TLS:
      ports: [443, 8443]
    QUIC:
      ports: [443, 8443]
  force-domain:
    - +.v2ex.com

  skip-domain:
    - Mijia Cloud

tun:
  enable: true
  stack: system
  dns-hijack:
    - any:53
  auto-route: true
  auto-detect-interface: true

dns:
  enable: true
  listen: 0.0.0.0:1053
  ipv6: true
  enhanced-mode: fake-ip
  fake-ip-range: 28.0.0.1/8
  fake-ip-filter:
    - "*"
    - +.lan
  default-nameserver:
    - 223.5.5.5
    - 223.6.6.6
  nameserver:
    - https://223.5.5.5/dns-query#h3=true
    - https://223.6.6.6/dns-query#h3=true

# 锚点 - 节点订阅的参数 [每小时更新一次订阅节点，每 6 秒一次健康检查]
NodeParam: &NodeParam {type: http, interval: 3600, health-check: {enable: true, url: 'http://www.google.com/blank.html', interval: 6}}

# 锚点 - 节点订阅
proxy-providers: 
  机场名称1:
    url: '请输入订阅url'
    <<: *NodeParam
    path: './proxy_providers/国际.yaml'
    override:
      additional-prefix: "[国际] " # 为订阅节点添加机场名称前缀

# 锚点 - 节点筛选组
FilterHK: &FilterHK '^(?=.*((?i)🇭🇰|香港|(\b(HK|Hong)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterTW: &FilterTW '^(?=.*((?i)🇹🇼|台湾|(\b(TW|Tai|Taiwan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterJP: &FilterJP '^(?=.*((?i)🇯🇵|日本|川日|东京|大阪|泉日|埼玉|(\b(JP|Japan)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterKR: &FilterKR '^(?=.*((?i)🇰🇷|韩国|韓|首尔|(\b(KR|Korea)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterSG: &FilterSG '^(?=.*((?i)🇸🇬|新加坡|狮|(\b(SG|Singapore)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUS: &FilterUS '^(?=.*((?i)🇺🇸|美国|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|(\b(US|United States)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterUK: &FilterUK '^(?=.*((?i)🇬🇧|英国|伦敦|(\b(UK|United Kingdom)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterFR: &FilterFR '^(?=.*((?i)🇫🇷|法国|(\b(FR|France)(\d+)?\b)))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'
FilterAll: &FilterAll '^(?=.*((?i)香港|台湾|日本|韩国|新加坡|美国|英国|法国))(?!.*((?i)回国|校园|游戏|🎮|(\b(GAME)\b))).*$'

# 组参数锚点
# 锚点 - 时延优选参数 [每 6 秒一次惰性健康检查，容差 20ms，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
UrlTest: &UrlTest {type: url-test, interval: 6, tolerance: 20, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 故障转移参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
FallBack: &FallBack {type: fallback, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 负载均衡参数 [每 6 秒一次惰性健康检查，时延超过 2 秒判定为失败，失败 3 次则自动触发健康检查]
LoadBalance: &LoadBalance {type: load-balance, interval: 6, lazy: true, url: 'http://www.google.com/blank.html', disable-udp: false, strategy: consistent-hashing, timeout: 2000, max-failed-times: 3, hidden: true, include-all-providers: true}
# 锚点 - 规则参数 [每小时更新一次订阅规则，更新规则时使用直连]
RuleProviders: &RuleProviders {type: http, behavior: classical, interval: 3600, format: yaml, proxy: DIRECT}

# 策略组
proxy-groups: 
  - {name: 全球, type: select, include-all-providers: true, filter: *FilterAll}
  - {name: 油管, type: select, proxies: [香港, 台湾, 日本, 韩国, 新国, 美国, 英国, 法国]}
  - {name: 电报, type: select, proxies: [香港, 台湾, 日本, 韩国, 新国, 美国, 英国, 法国,]}
  - {name: TikTok, type: select, proxies: [日本, 香港, 台湾, 韩国, 新国, 美国, 英国, 法国]}
  - {name: ChatGpt, type: select, proxies: [台湾, 香港, 日本, 韩国, 新国, 美国, 英国, 法国]}
  - {name: 苹果商店, type: select, proxies: [DIRECT, 香港, 台湾, 日本, 韩国, 新国, 美国, 英国, 法国]}
  - {name: 苹果账户, type: select, proxies: [DIRECT, 香港, 台湾, 日本, 韩国, 新国, 美国, 英国, 法国]}
  - {name: 微软, type: select, proxies: [DIRECT, 香港, 台湾, 日本, 韩国, 新国, 美国, 英国, 法国]}
  - {name: 兜底, type: fallback, proxies: [香港, 台湾, 日本, 韩国, 新国, 美国, 英国, 法国]}

# 时延优选组
  - {name: 香港, <<: *UrlTest, filter: *FilterHK}
  - {name: 台湾, <<: *UrlTest, filter: *FilterTW}
  - {name: 日本, <<: *UrlTest, filter: *FilterJP}
  - {name: 韩国, <<: *UrlTest, filter: *FilterKR}
  - {name: 新国, <<: *UrlTest, filter: *FilterSG}
  - {name: 美国, <<: *UrlTest, filter: *FilterUS}
  - {name: 英国, <<: *UrlTest, filter: *FilterUK}
  - {name: 法国, <<: *UrlTest, filter: *FilterFR}

# 订阅规则
rule-providers:

  fakeip-filter:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/fakeip-filter.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/fakeip-filter.mrs"
    interval: 86400
  cn:
    type: http
    behavior: domain
    format: mrs
    path: ./rules/cn.mrs
    url: "https://github.com/DustinWin/ruleset_geodata/releases/download/mihomo-ruleset/cn.mrs"
  Direct:
    <<: *RuleProviders
    path: './rules/Direct.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Direct.yaml'
  Proxy:
    <<: *RuleProviders
    path: './rules/Proxy.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Proxy.yaml'
  YouTube:
    <<: *RuleProviders
    path: './rules/TikTok.yaml'
    url: 'https://rule.kelee.one/Clash/YouTube.yaml'	
  Telegram:
    <<: *RuleProviders
    path: './rules/Telegram.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/Telegram.yaml'
  GitHub:
    <<: *RuleProviders
    path: './rules/TikTok.yaml'
    url: 'https://rule.kelee.one/Clash/GitHub.yaml'
  TikTok:
    <<: *RuleProviders
    path: './rules/TikTok.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/TikTok.yaml'	
  AI:
    <<: *RuleProviders
    path: './rules/AI.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/AI.yaml'
  Microsoft:
    <<: *RuleProviders
    path: './rules/Microsoft.yaml'
    url: 'https://rule.kelee.one/Clash/Microsoft.yaml'
  Google:
    <<: *RuleProviders
    path: './rules/Google.yaml'
    url: 'https://rule.kelee.one/Clash/Google.yaml'
  ChinaDownloadCDN:
    <<: *RuleProviders
    path: './rules/ChinaDownloadCDN.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ChinaDownloadCDN.yaml'
  iCloudChina:
    <<: *RuleProviders
    path: './rules/iCloudChina.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/iCloudChina.yaml'
  ApplePushNotificationService:
    <<: *RuleProviders
    path: './rules/ApplePushNotificationService.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ApplePushNotificationService.yaml'
  AppleSoftwareUpdates:
    <<: *RuleProviders
    path: './rules/AppleSoftwareUpdates.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/AppleSoftwareUpdates.yaml'
  AppleID:
    <<: *RuleProviders
    path: './rules/AppleID.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/AppleID.yaml'
  AppStore:
    <<: *RuleProviders
    path: './rules/AppStore.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/AppStore.yaml'
  ESET_China:
    <<: *RuleProviders
    path: './rules/ESET_China.yaml'
    url: 'https://kelee.one/Tool/Clash/Rule/ESET_China.yaml'
    
# 规则指向
rules:
  - RULE-SET,fakeip-filter,REJECT,no-resolve
  - RULE-SET,cn,REJECT,no-resolve
  - RULE-SET, Direct, DIRECT,no-resolve
  - RULE-SET, Proxy, 兜底
  - RULE-SET, YouTube, 油管
  - RULE-SET, Telegram, 电报
  - RULE-SET, TikTok, TikTok
  - RULE-SET, AI, ChatGpt
  - RULE-SET, GitHub, 全球
  - RULE-SET, Microsoft, 微软
  - RULE-SET, Google, 兜底
  - RULE-SET, ChinaDownloadCDN, DIRECT,no-resolve
  - RULE-SET, iCloudChina, DIRECT,no-resolve
  - RULE-SET, ApplePushNotificationService, DIRECT,no-resolve
  - RULE-SET, AppleSoftwareUpdates, DIRECT,no-resolve
  - RULE-SET, AppleID, 苹果账户
  - RULE-SET, AppStore, 苹果商店
  - RULE-SET, ESET_China, DIRECT,no-resolve
  - GEOIP,CN,DIRECT,no-resolve
  - MATCH,全球,no-resolve

